variables:
  # Store all the bst stuff under the "${CI_PROJECT_DIR}" directory.
  # Note that GitLab CI will only cache stuff inside the "${CI_PROJECT_DIR}" folder.
  XDG_CACHE_HOME: "${CI_PROJECT_DIR}/cache"
  GET_SOURCES_ATTEMPTS: 3
  BST: "bst --config build.conf --log-file logs/build.log --colors"
  BST_SHA: "10abe77fe8d77385d86f225b503d9185f4ef7f3a" #  1.2.3
  BST_EXTERNAL_SHA: '0.8.0-0-g762ea216b751bf89ac15350e1cb98542963bbf33'
  FLATPAK_BRANCH: master

stages:
  - track
  - build
  - flatpak


# Store all the downloaded git and ostree repos in the cache.
# This saves us fetching them on every build
cache:
  key: bst
  paths:
    - "${XDG_CACHE_HOME}/buildstream/sources/"


before_script:
  # Remove any installed buildstream binary
  - pip3 uninstall -y buildstream

  # Use specific version of BuildStream
  - git clone https://gitlab.com/BuildStream/buildstream.git
  - git -C buildstream/ checkout $BST_SHA
  - pip3 install buildstream/

  # install bst-external nedded for the flatpak_image plugin
  - git clone https://gitlab.com/BuildStream/bst-external.git
  - git -C bst-external/ checkout $BST_EXTERNAL_SHA
  - pip3 install bst-external/

  # flatpak and rsync to generate and transfer the flatpak runtimes
  - dnf install -y flatpak rsync

  # Ensure the log directory exists
  - mkdir -p logs

  # Setup certificate for pushing to the cache
  - |
    if [ -n "$GITLAB_CAS_PUSH_CERT" ]; then
       echo "$GITLAB_CAS_PUSH_CERT" > client.crt
       echo "$GITLAB_CAS_PUSH_KEY" > client.key
    fi

    cat >> build.conf << EOF

    projects:
      gnome:
        artifacts:
          url: https://cache.gitlab.gnome.org:11002
          client-key: client.key
          client-cert: client.crt
          push: true
    EOF

  # and ssh key for pushing to the flatpak repo
  - |
    if [ -n "$GITLAB_SSH_KEY" ]; then
        mkdir -p ~/.ssh

        echo "$GITLAB_SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        cat >> ~/.ssh/config << EOF
    Host gbm-builder.gnome.org
        User gbm
        ProxyJump bastion.gnome.org
        Hostname vpn.gbm-builder.gnome.org

    Host bastion.gnome.org
        User gbm
    EOF

        # Trust the host key of the jump host and release server
        cat > ~/.ssh/known_hosts << EOF
    |1|Ec1eaTSoDQshjIpoIPouJCw40R4=|wG59JbBlwNW2K3kznnH7OUZYEhA= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAz8HWpA/W/0c/jV9+nU9zyZVUjw8flLksl6BNkcM3s12AMJXTG6qLJ+qVeQwI20eDkTioLLQYgOmMsmmFsO68vlivuxHYfAvjFHui6TkDVGXJS3lPGyOCqVwRmpyG0GnrfRWdsdgrYEo6sGbParkRb/ZfXxOuUXg3wWXMmeMyWXhkb09b1uYZTUjuruJpJTQ9kIC3CH8bdl7oiq2ffd+KdAykTkzkq+kFNizNRe0uBKtkcDgYpAZGOPCEJjpjwvDrWinXoE7rvE8zMfAv2/CP5AM4D+8yHrFgWz9tOexJyNsfJAZmQjg5rWuoeYow9tTVNWVloRU3tvF8OvVprgwPAw==
    |1|DdY9PAqPg4LrkwIatwAUs3JLOXU=|fJqmuz18y1bJLarIIqckB1dH/ts= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAGixpYwAfvRyHOlqpKnrpo3iG5zPjQNL0hcay90SlNMfZ4W6+QUoFTZ/rQXDQFbBrOgTXzFDEQxKxxo350n6dw=
    EOF

    fi

.cache-template: &cache
  # Store all the downloaded sources in the distributed cache. This saves
  # us fetching them from the different repos and further afield
  # on every build.
  cache:
    key: bst
    paths:
      - "${XDG_CACHE_HOME}/buildstream/sources/"

.build-template: &build
  stage: build
  script:
    - ${BST} -o arch "${ARCH}" build core.bst flatpak-runtimes.bst
  <<: *cache
  # Store artifacts so we can inspect build failures
  artifacts:
    when: always
    paths:
      - logs
      - project.refs

.flatpak-template: &flatpak
  stage: flatpak
  script:
    - ${BST} -o arch "${ARCH}" build flatpak-runtimes.bst

    # checkout the runtimes
    - |
      for runtime in platform platform-locale sdk sdk-debug sdk-docs sdk-locale; do
        bst -o arch "${ARCH}" checkout --hardlinks "flatpak/${runtime}.bst" "runtimes/${runtime}"
        flatpak build-export --arch="${FLATPAK_ARCH}" --no-update-summary --files=files repo/ "runtimes/${runtime}" "${FLATPAK_BRANCH}"
      done

    - BRANCHES=$(find repo/refs/heads/ -type f | grep "${FLATPAK_ARCH}/${FLATPAK_BRANCH}" | sed s,repo/refs/heads/,,)

    # Push the resulting runtimes to gbm.gnome.org
    # Assume there will be no branch name collisions,
    # the ssh key is available only on protected branches
    - |
      if [ -n "$GITLAB_SSH_KEY" ]; then
        if [ "$FLATPAK_BRANCH" = master ]; then
          CONFIG_FILE=config/nightly.json
        else
          CONFIG_FILE=config/stable.json
        fi

        rsync -a repo/ gbm-builder.gnome.org:incoming/repo-${CI_JOB_ID}
        ssh gbm-builder.gnome.org gbm-flatpak-scripts/import-commits -c "${CONFIG_FILE}" incoming/repo-${CI_JOB_ID} ${BRANCHES}
      fi

  <<: *cache
  # Store artifacts so we can inspect build failures
  artifacts:
    when: always
    paths:
      - logs
      - project.refs


track:
  image: buildstream/buildstream-fedora:master-123-abef70fe
  stage: track
  script:
    - ${BST} track --deps all core.bst flatpak-runtimes.bst

  <<: *cache
  tags:
    - x86_64
    - gnome-build-meta
  # don't run on stable branches
  except:
    - /^gnome-\d-\d\d$/
  artifacts:
    when: always
    paths:
      - logs
      - project.refs


build-gnome-core-x86_64:
  image: buildstream/buildstream-fedora:master-123-abef70fe
  <<: *build
  tags:
    - x86_64
    - gnome-build-meta
  variables:
    ARCH: x86_64

build-gnome-core-i386:
  image: buildstream/buildstream-fedora:master-123-abef70fe
  <<: *build
  tags:
    - x86_64
    - gnome-build-meta
  variables:
    ARCH: i686
  allow_failure: true

build-gnome-core-aarch64:
  image: buildstream/buildstream-fedora:aarch64-master-123-abef70fe
  <<: *build
  tags:
    - aarch64
    - gnome-build-meta
  variables:
    ARCH: aarch64
  allow_failure: true

build-gnome-core-arm:
  image: buildstream/buildstream-fedora:aarch64-master-123-abef70fe
  <<: *build
  tags:
    - armhf
    - gnome-build-meta
  variables:
    ARCH: arm
  allow_failure: true

flatpak-x86_64:
  image: buildstream/buildstream-fedora:master-123-abef70fe
  <<: *flatpak
  tags:
    - x86_64
    - gnome-build-meta
  variables:
    ARCH: x86_64
    FLATPAK_ARCH: x86_64

flatpak-i386:
  image: buildstream/buildstream-fedora:master-123-abef70fe
  <<: *flatpak
  tags:
    - x86_64
    - gnome-build-meta
  variables:
    ARCH: i686
    FLATPAK_ARCH: i386

flatpak-aarch64:
  image: buildstream/buildstream-fedora:aarch64-master-123-abef70fe
  <<: *flatpak
  tags:
    - aarch64
    - gnome-build-meta
  variables:
    ARCH: aarch64
    FLATPAK_ARCH: aarch64

flatpak-arm:
  image: buildstream/buildstream-fedora:aarch64-master-123-abef70fe
  <<: *flatpak
  tags:
    - armhf
    - gnome-build-meta
  variables:
    ARCH: arm
    FLATPAK_ARCH: arm
