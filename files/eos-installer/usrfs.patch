diff --git a/gnome-image-installer/util/gpt.c b/gnome-image-installer/util/gpt.c
index 02926a5e..02bd25b1 100644
--- a/gnome-image-installer/util/gpt.c
+++ b/gnome-image-installer/util/gpt.c
@@ -19,6 +19,12 @@ static uint8_t GPT_GUID_LINUX_ROOTFS_AARCH64[] = {0x45, 0xb0, 0x21, 0xb9, 0xf0,
 static uint8_t GPT_GUID_LINUX_ROOTFS_RISCV_32[] = {0xfe, 0xa7, 0xd5, 0x60, 0x7d, 0x8e, 0x5c, 0x43, 0xb7, 0x14, 0x3d, 0xd8, 0x16, 0x21, 0x44, 0xe1};
 static uint8_t GPT_GUID_LINUX_ROOTFS_RISCV_64[] = {0xa6, 0x70, 0xec, 0x72, 0x74, 0xcf, 0xe6, 0x40, 0xbd, 0x49, 0x4b, 0xda, 0x08, 0xe8, 0xf2, 0x24};
 
+static uint8_t GPT_GUID_LINUX_USRFS_X86[] = {0x76, 0x0d, 0x25, 0x75, 0xc6, 0x8c, 0x8e, 0x45, 0xbd, 0x66, 0xbd, 0x47, 0xcc, 0x81, 0xa8, 0x12};
+static uint8_t GPT_GUID_LINUX_USRFS_X86_64[] = {0x0c, 0x68, 0x84, 0x84, 0x21, 0x95, 0xc6, 0x48, 0x9c, 0x11, 0xb0, 0x72, 0x06, 0x56, 0xf6, 0x9e};
+static uint8_t GPT_GUID_LINUX_USRFS_ARM[] = {0xa3, 0x59, 0x03, 0x7d, 0xb3, 0x02, 0x0a, 0x4f, 0x86, 0x5c, 0x65, 0x44, 0x03, 0xe7, 0x06, 0x25};
+static uint8_t GPT_GUID_LINUX_USRFS_AARCH64[] = {0x50, 0x10, 0xe0, 0xb0, 0x5f, 0xee, 0x90, 0x43, 0x94, 0x9a, 0x91, 0x01, 0xb1, 0x71, 0x04, 0xe9};
+static uint8_t GPT_GUID_LINUX_USRFS_RISCV_32[] = {0x22, 0xfb, 0x33, 0xb9, 0x3f, 0x5c, 0x91, 0x4f, 0xaf, 0x90, 0xe2, 0xbb, 0x0f, 0xa5, 0x07, 0x02};
+static uint8_t GPT_GUID_LINUX_USRFS_RISCV_64[] = {0x4b, 0xc3, 0xae, 0xbe, 0x42, 0x84, 0x9b, 0x43, 0xa4, 0x0b, 0x98, 0x43, 0x81, 0xed, 0x09, 0x7d};
 
 
 uint8_t is_nth_flag_set(uint64_t flags, uint8_t n)
@@ -245,7 +251,7 @@ int is_eos_gpt_valid(struct ptable *pt, uint64_t *size)
 
     // A subsequent partition must be a Linux rootfs.
     int has_root = 0;
-    for (i = 1; i < pt->header.ptable_count; ++i) {
+    for (i = 1; i < 3; ++i) {
       if (memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_DATA, 16)==0
           || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_ROOTFS_X86, 16)==0
           || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_ROOTFS_X86_64, 16)==0
@@ -262,6 +268,15 @@ int is_eos_gpt_valid(struct ptable *pt, uint64_t *size)
         has_root=1;
         break ;
       }
+      if (memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_USRFS_X86, 16)==0
+          || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_USRFS_X86_64, 16)==0
+          || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_USRFS_ARM, 16)==0
+          || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_USRFS_AARCH64, 16)==0
+          || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_USRFS_RISCV_32, 16)==0
+          || memcmp(&pt->partitions[i].type_guid, GPT_GUID_LINUX_USRFS_RISCV_64, 16)==0) {
+        has_root=1;
+        break ;
+      }
     }
     if (!has_root) {
       g_warning("no root partition found");
