diff --git a/elements/include/linux.yml b/elements/include/linux.yml
index f0ab61751..7b2a44009 100644
--- a/elements/include/linux.yml
+++ b/elements/include/linux.yml
@@ -4,7 +4,7 @@ sources:
   track: v*
   exclude:
   - '*-rc*'
-  ref: v6.4.6-0-g79562f63d621517795c125092620cf4e5778ad44
+  ref: v6.4.7-0-g4e382c2b468348d6208e5a18dbf1591a18170889
 - kind: local
   path: files/linux/config-utils.sh
 - kind: patch_queue
diff --git a/patches/linux/0001-drm-panel-add-BOE-TH101MB31IG002-28A-driver.patch b/patches/linux/0001-drm-panel-add-BOE-TH101MB31IG002-28A-driver.patch
new file mode 100644
index 000000000..58f5a5ca6
--- /dev/null
+++ b/patches/linux/0001-drm-panel-add-BOE-TH101MB31IG002-28A-driver.patch
@@ -0,0 +1,351 @@
+From 1904527f1cf8bba73ea39e21b798b317e4aba767 Mon Sep 17 00:00:00 2001
+From: Segfault <awarnecke002@hotmail.com>
+Date: Fri, 20 Jan 2023 14:20:27 +1100
+Subject: [PATCH 1/4] drm/panel: add BOE TH101MB31IG002-28A driver
+
+This driver is used for the panel in the Pine64 PineTab2.
+
+Signed-off-by: Segfault <awarnecke002@hotmail.com>
+---
+ drivers/gpu/drm/panel/Kconfig                 |  11 +
+ drivers/gpu/drm/panel/Makefile                |   1 +
+ .../drm/panel/panel-boe-th101mb31ig002-28a.c  | 293 ++++++++++++++++++
+ 3 files changed, 305 insertions(+)
+ create mode 100644 drivers/gpu/drm/panel/panel-boe-th101mb31ig002-28a.c
+
+diff --git a/drivers/gpu/drm/panel/Kconfig b/drivers/gpu/drm/panel/Kconfig
+index 2b9d6db7860b..ba1fd1168e95 100644
+--- a/drivers/gpu/drm/panel/Kconfig
++++ b/drivers/gpu/drm/panel/Kconfig
+@@ -67,6 +67,17 @@ config DRM_PANEL_BOE_HIMAX8279D
+ 	  24 bit RGB per pixel. It provides a MIPI DSI interface to
+ 	  the host and has a built-in LED backlight.
+ 
++config DRM_PANEL_BOE_TH101MB31UIG002_28A
++	tristate "Boe TH101MB31UIG002-28A panel"
++	depends on OF
++	depends on DRM_MIPI_DSI
++	depends on BACKLIGHT_CLASS_DEVICE
++	help
++	  Say Y here if you want to enable support for Boe
++	  TH101MB31UIG002-28A TFT-LCD modules. The panel has a 800x1280
++	  resolution and uses 24 bit RGB per pixel. It provides a MIPI DSI
++	  interface to the host and has a built-in LED backlight.
++
+ config DRM_PANEL_BOE_TV101WUM_NL6
+ 	tristate "BOE TV101WUM and AUO KD101N80 45NA 1200x1920 panel"
+ 	depends on OF
+diff --git a/drivers/gpu/drm/panel/Makefile b/drivers/gpu/drm/panel/Makefile
+index ff169781e82d..4debde6318de 100644
+--- a/drivers/gpu/drm/panel/Makefile
++++ b/drivers/gpu/drm/panel/Makefile
+@@ -5,6 +5,7 @@ obj-$(CONFIG_DRM_PANEL_ASUS_Z00T_TM5P5_NT35596) += panel-asus-z00t-tm5p5-n35596.
+ obj-$(CONFIG_DRM_PANEL_AUO_A030JTN01) += panel-auo-a030jtn01.o
+ obj-$(CONFIG_DRM_PANEL_BOE_BF060Y8M_AJ0) += panel-boe-bf060y8m-aj0.o
+ obj-$(CONFIG_DRM_PANEL_BOE_HIMAX8279D) += panel-boe-himax8279d.o
++obj-$(CONFIG_DRM_PANEL_BOE_TH101MB31UIG002_28A) += panel-boe-th101mb31ig002-28a.o
+ obj-$(CONFIG_DRM_PANEL_BOE_TV101WUM_NL6) += panel-boe-tv101wum-nl6.o
+ obj-$(CONFIG_DRM_PANEL_DSI_CM) += panel-dsi-cm.o
+ obj-$(CONFIG_DRM_PANEL_LVDS) += panel-lvds.o
+diff --git a/drivers/gpu/drm/panel/panel-boe-th101mb31ig002-28a.c b/drivers/gpu/drm/panel/panel-boe-th101mb31ig002-28a.c
+new file mode 100644
+index 000000000000..2879d6b7aa8a
+--- /dev/null
++++ b/drivers/gpu/drm/panel/panel-boe-th101mb31ig002-28a.c
+@@ -0,0 +1,293 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2023 Alexander Warnecke <awarnecke002@hotmail.com>
++ */
++
++#include <linux/delay.h>
++#include <linux/gpio/consumer.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_device.h>
++#include <linux/regulator/consumer.h>
++
++#include <drm/drm_connector.h>
++#include <drm/drm_mipi_dsi.h>
++#include <drm/drm_modes.h>
++#include <drm/drm_panel.h>
++
++struct boe {
++	struct drm_panel panel;
++	bool enabled;
++	bool prepared;
++
++	struct mipi_dsi_device *dsi;
++
++	struct regulator *power;
++	struct gpio_desc *enable;
++	struct gpio_desc *reset;
++
++	enum drm_panel_orientation orientation;
++};
++
++static inline struct boe *panel_to_boe(struct drm_panel *panel)
++{
++	return container_of(panel, struct boe, panel);
++}
++
++static int boe_disable(struct drm_panel *panel)
++{
++	struct boe *ctx = panel_to_boe(panel);
++
++	if (!ctx->enabled)
++		return 0;
++
++	mipi_dsi_dcs_set_display_off(ctx->dsi);
++
++	msleep(120);
++
++	ctx->enabled = false;
++	return 0;
++}
++
++static int boe_unprepare(struct drm_panel *panel)
++{
++	struct boe *ctx = panel_to_boe(panel);
++
++	if (!ctx->prepared)
++		return 0;
++
++	mipi_dsi_dcs_enter_sleep_mode(ctx->dsi);
++
++	msleep(220);
++
++	gpiod_set_value_cansleep(ctx->reset, 1);
++	gpiod_set_value_cansleep(ctx->enable, 0);
++	regulator_disable(ctx->power);
++
++	ctx->prepared = false;
++	return 0;
++}
++
++static int boe_prepare(struct drm_panel *panel)
++{
++	struct boe *ctx = panel_to_boe(panel);
++	struct mipi_dsi_device *dsi = ctx->dsi;
++	int ret;
++
++	if (ctx->prepared)
++		return 0;
++
++	ret = regulator_enable(ctx->power);
++	if (ret) {
++		dev_err(&dsi->dev, "Failed to enable power supply: %d\n", ret);
++		return ret;
++	}
++
++	gpiod_set_value_cansleep(ctx->enable, 1);
++
++	msleep(120);
++
++	gpiod_direction_output(ctx->reset, 1);
++
++	msleep(120);
++
++	gpiod_direction_output(ctx->reset, 0);
++
++	msleep(120);
++
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xE0, 0xAB, 0xBA }, 3);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xE1, 0xBA, 0xAB }, 3);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB1, 0x10, 0x01, 0x47, 0xFF }, 5);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB2, 0x0C, 0x14, 0x04, 0x50, 0x50, 0x14 }, 7);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB3, 0x56, 0x53, 0x00 }, 4);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB4, 0x33, 0x30, 0x04 }, 4);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB6, 0xB0, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00 }, 8);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB8, 0x05, 0x12, 0x29, 0x49, 0x48, 0x00, 0x00 }, 8);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xB9, 0x7C, 0x65, 0x55, 0x49, 0x46, 0x36, 0x3B, 0x24, 0x3D, 0x3C, 0x3D, 0x5C, 0x4C, 0x55, 0x47, 0x46, 0x39, 0x26, 0x06, 0x7C, 0x65, 0x55, 0x49, 0x46, 0x36, 0x3B, 0x24, 0x3D, 0x3C, 0x3D, 0x5C, 0x4C, 0x55, 0x47, 0x46, 0x39, 0x26, 0x06 }, 39);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC0, 0xFF, 0x87, 0x12, 0x34, 0x44, 0x44, 0x44, 0x44, 0x98, 0x04, 0x98, 0x04, 0x0F, 0x00, 0x00, 0xC1 }, 17);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC1, 0x54, 0x94, 0x02, 0x85, 0x9F, 0x00, 0x7F, 0x00, 0x54, 0x00 }, 11);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC2, 0x17, 0x09, 0x08, 0x89, 0x08, 0x11, 0x22, 0x20, 0x44, 0xFF, 0x18, 0x00 }, 13);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC3, 0x86, 0x46, 0x05, 0x05, 0x1C, 0x1C, 0x1D, 0x1D, 0x02, 0x1F, 0x1F, 0x1E, 0x1E, 0x0F, 0x0F, 0x0D, 0x0D, 0x13, 0x13, 0x11, 0x11, 0x00 }, 23);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC4, 0x07, 0x07, 0x04, 0x04, 0x1C, 0x1C, 0x1D, 0x1D, 0x02, 0x1F, 0x1F, 0x1E, 0x1E, 0x0E, 0x0E, 0x0C, 0x0C, 0x12, 0x12, 0x10, 0x10, 0x00 }, 23);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC6, 0x2A, 0x2A }, 3);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xC8, 0x21, 0x00, 0x31, 0x42, 0x34, 0x16 }, 7);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xCA, 0xCB, 0x43 }, 3);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xCD, 0x0E, 0x4B, 0x4B, 0x20, 0x19, 0x6B, 0x06, 0xB3 }, 9);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xD2, 0xE3, 0x2B, 0x38, 0x00 }, 5);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xD4, 0x00, 0x01, 0x00, 0x0E, 0x04, 0x44, 0x08, 0x10, 0x00, 0x00, 0x00 }, 12);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xE6, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF }, 9);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xF0, 0x12, 0x03, 0x20, 0x00, 0xFF }, 6);
++	mipi_dsi_dcs_write_buffer(dsi, (u8[]){ 0xF3, 0x00 }, 2);
++
++	mipi_dsi_dcs_exit_sleep_mode(dsi);
++
++	msleep(120);
++
++	ctx->prepared = true;
++	return 0;
++}
++
++static int boe_enable(struct drm_panel *panel)
++{
++	struct boe *ctx = panel_to_boe(panel);
++
++	if (ctx->enabled)
++		return 0;
++
++	mipi_dsi_dcs_set_display_on(ctx->dsi);
++
++	msleep(120);
++
++	ctx->enabled = true;
++	return 0;
++}
++
++static const struct drm_display_mode boe_default_mode = {
++	.clock		= 73500,
++
++	.hdisplay	= 800,
++	.hsync_start	= 800 + 64,
++	.hsync_end	= 800 + 64 + 16,
++	.htotal		= 800 + 64 + 16 + 64,
++
++	.vdisplay	= 1280,
++	.vsync_start	= 1280 + 2,
++	.vsync_end	= 1280 + 2 + 4,
++	.vtotal		= 1280 + 2 + 4 + 12,
++
++	.type = DRM_MODE_TYPE_DRIVER | DRM_MODE_TYPE_PREFERRED,
++};
++
++static int boe_get_modes(struct drm_panel *panel,
++			 struct drm_connector *connector)
++{
++	struct boe *ctx = panel_to_boe(panel);
++	struct drm_display_mode *mode;
++
++	mode = drm_mode_duplicate(connector->dev, &boe_default_mode);
++	if (!mode) {
++		dev_err(panel->dev, "Failed to add mode %ux%u@%u\n",
++			boe_default_mode.hdisplay,
++			boe_default_mode.vdisplay,
++			drm_mode_vrefresh(&boe_default_mode));
++		return -ENOMEM;
++	}
++
++	drm_mode_set_name(mode);
++	drm_mode_probed_add(connector, mode);
++
++	connector->display_info.bpc = 8;
++	connector->display_info.width_mm = 216;
++	connector->display_info.height_mm = 135;
++
++	/*
++	 * TODO: Remove once all drm drivers call
++	 * drm_connector_set_orientation_from_panel()
++	 */
++	drm_connector_set_panel_orientation(connector, ctx->orientation);
++
++	return 1;
++}
++
++static enum drm_panel_orientation boe_get_orientation(struct drm_panel *panel)
++{
++	struct boe *ctx = panel_to_boe(panel);
++
++	return ctx->orientation;
++}
++
++static const struct drm_panel_funcs boe_funcs = {
++	.disable = boe_disable,
++	.unprepare = boe_unprepare,
++	.prepare = boe_prepare,
++	.enable = boe_enable,
++	.get_modes = boe_get_modes,
++	.get_orientation = boe_get_orientation,
++};
++
++static int boe_dsi_probe(struct mipi_dsi_device *dsi)
++{
++	struct boe *ctx;
++	int ret;
++
++	ctx = devm_kzalloc(&dsi->dev, sizeof(*ctx), GFP_KERNEL);
++	if (!ctx)
++		return -ENOMEM;
++
++	ctx->enabled = false;
++	ctx->prepared = false;
++
++	mipi_dsi_set_drvdata(dsi, ctx);
++	ctx->dsi = dsi;
++
++	drm_panel_init(&ctx->panel, &dsi->dev, &boe_funcs,
++		       DRM_MODE_CONNECTOR_DSI);
++
++	ctx->power = devm_regulator_get(&dsi->dev, "power");
++	if (IS_ERR(ctx->power))
++		return dev_err_probe(&dsi->dev, PTR_ERR(ctx->power),
++				     "Failed to get power regulator\n");
++
++	ctx->enable = devm_gpiod_get(&dsi->dev, "enable", GPIOD_OUT_LOW);
++	if (IS_ERR(ctx->enable))
++		return dev_err_probe(&dsi->dev, PTR_ERR(ctx->enable),
++				     "Failed to get enable GPIO\n");
++
++	ctx->reset = devm_gpiod_get(&dsi->dev, "reset", GPIOD_OUT_HIGH);
++	if (IS_ERR(ctx->reset))
++		return dev_err_probe(&dsi->dev, PTR_ERR(ctx->reset),
++				     "Failed to get reset GPIO\n");
++
++	ret = of_drm_get_panel_orientation(dsi->dev.of_node, &ctx->orientation);
++	if (ret)
++		return dev_err_probe(&dsi->dev, ret,
++				     "Failed to get orientation\n");
++
++	ret = drm_panel_of_backlight(&ctx->panel);
++	if (ret)
++		return ret;
++
++	drm_panel_add(&ctx->panel);
++
++	dsi->lanes = 4;
++	dsi->format = MIPI_DSI_FMT_RGB888;
++	dsi->mode_flags = MIPI_DSI_MODE_VIDEO_BURST |
++			  MIPI_DSI_MODE_NO_EOT_PACKET |
++			  MIPI_DSI_MODE_LPM;
++
++	ret = mipi_dsi_attach(dsi);
++	if (ret < 0) {
++		drm_panel_remove(&ctx->panel);
++		return ret;
++	}
++
++	return 0;
++}
++
++static void boe_dsi_remove(struct mipi_dsi_device *dsi)
++{
++	struct boe *ctx = mipi_dsi_get_drvdata(dsi);
++
++	mipi_dsi_detach(dsi);
++	drm_panel_remove(&ctx->panel);
++}
++
++static const struct of_device_id boe_of_match[] = {
++	{ .compatible = "boe,th101mb31ig002-28a", },
++	{ /* sentinel */ }
++};
++MODULE_DEVICE_TABLE(of, boe_of_match);
++
++static struct mipi_dsi_driver boe_driver = {
++	.driver = {
++		.name = "boe-th101mb31ig002-28a",
++		.of_match_table = boe_of_match,
++	},
++	.probe = boe_dsi_probe,
++	.remove = boe_dsi_remove,
++};
++module_mipi_dsi_driver(boe_driver);
++
++MODULE_AUTHOR("Alexander Warnecke <awarnecke002@hotmail.com>");
++MODULE_DESCRIPTION("BOE TH101MB31IG002-28A MIPI-DSI LCD panel");
++MODULE_LICENSE("GPL");
+-- 
+2.41.0.dirty
+
diff --git a/patches/linux/0002-arch-arm64-add-Pine64-PineTab2-device-trees.patch b/patches/linux/0002-arch-arm64-add-Pine64-PineTab2-device-trees.patch
new file mode 100644
index 000000000..e8258cb78
--- /dev/null
+++ b/patches/linux/0002-arch-arm64-add-Pine64-PineTab2-device-trees.patch
@@ -0,0 +1,1155 @@
+From 48be6559b42fc704e0ad19bfc5ce2d687ad705b0 Mon Sep 17 00:00:00 2001
+From: Segfault <awarnecke002@hotmail.com>
+Date: Sat, 20 May 2023 15:32:45 +1000
+Subject: [PATCH 2/4] arch/arm64: add Pine64 PineTab2 device trees
+
+This includes support for both the v0.1 units that were sent to developers and the v2.0 units from production, v1.0 is not included as no units are known to exist
+
+Signed-off-by: Segfault <awarnecke002@hotmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |    2 +
+ .../dts/rockchip/rk3566-pinetab2-v0.1.dts     |   26 +
+ .../dts/rockchip/rk3566-pinetab2-v2.0.dts     |   46 +
+ .../boot/dts/rockchip/rk3566-pinetab2.dtsi    | 1031 +++++++++++++++++
+ 4 files changed, 1105 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v0.1.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v2.0.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi
+
+diff --git a/arch/arm64/boot/dts/rockchip/Makefile b/arch/arm64/boot/dts/rockchip/Makefile
+index 2d585bbb8f3a..d02586ddea91 100644
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -74,6 +74,8 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353vs.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg503.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinenote-v1.1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinenote-v1.2.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinetab2-v0.1.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinetab2-v2.0.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-radxa-cm3-io.dtb
+diff --git a/arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v0.1.dts b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v0.1.dts
+new file mode 100644
+index 000000000000..ba244545ba26
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v0.1.dts
+@@ -0,0 +1,26 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include "rk3566-pinetab2.dtsi"
++
++/ {
++	model = "Pine64 PineTab2 v0.1";
++	compatible = "pine64,pinetab2-v0.1", "pine64,pinetab2", "rockchip,rk3566";
++};
++
++&lcd {
++	reset-gpios = <&gpio0 RK_PA6 GPIO_ACTIVE_LOW>;
++};
++
++&pinctrl {
++	display {
++		lcd0_rst_l: lcd0-rst-l {
++			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&vcc_wl {
++	gpio = <&gpio0 RK_PA0 GPIO_ACTIVE_LOW>;
++};
+diff --git a/arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v2.0.dts b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v2.0.dts
+new file mode 100644
+index 000000000000..79f672123b7f
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2-v2.0.dts
+@@ -0,0 +1,46 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include "rk3566-pinetab2.dtsi"
++
++/ {
++	model = "Pine64 PineTab2 v2.0";
++	compatible = "pine64,pinetab2-v2.0", "pine64,pinetab2", "rockchip,rk3566";
++};
++
++&gpio_keys {
++	pinctrl-0 = <&kb_id_det>, <&hall_int_l>;
++
++	hall-sensor {
++		debounce-interval = <20>;
++		gpios = <&gpio0 RK_PA6 GPIO_ACTIVE_LOW>;
++		label = "Hall Sensor";
++		linux,code = <SW_LID>;
++		linux,input-type = <EV_SW>;
++		wakeup-event-action = <EV_ACT_DEASSERTED>;
++		wakeup-source;
++	};
++};
++
++&lcd {
++	reset-gpios = <&gpio0 RK_PC6 GPIO_ACTIVE_LOW>;
++};
++
++&pinctrl {
++	display {
++		lcd0_rst_l: lcd0-rst-l {
++			rockchip,pins = <0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	hall {
++		hall_int_l: hall-int-l {
++			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&vcc_wl {
++	gpio = <&gpio0 RK_PA0 GPIO_ACTIVE_HIGH>;
++};
+diff --git a/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi
+new file mode 100644
+index 000000000000..a766f21bd6f8
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi
+@@ -0,0 +1,1031 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/gpio-keys.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
++#include <dt-bindings/usb/pd.h>
++#include "rk3566.dtsi"
++
++/ {
++	chassis-type = "tablet";
++
++	aliases {
++		mmc0 = &sdmmc0;
++		mmc1 = &sdhci;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	adc-keys {
++		compatible = "adc-keys";
++		io-channels = <&saradc 0>;
++		io-channel-names = "buttons";
++		keyup-threshold-microvolt = <1800000>;
++		poll-interval = <25>;
++
++		vol-up-key {
++			label = "Volume Up";
++			linux,code = <KEY_VOLUMEUP>;
++			press-threshold-microvolt = <297500>;
++		};
++
++		vol-down-key {
++			label = "Volume Down";
++			linux,code = <KEY_VOLUMEDOWN>;
++			press-threshold-microvolt = <1750>;
++		};
++	};
++
++	backlight: backlight {
++		compatible = "pwm-backlight";
++		pwms = <&pwm4 0 25000 0>;
++		brightness-levels = <0 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40 41 42 43 44 45 46 47 48 49 50 50 51 52 53 54 55 55 56 57 58 59 60 61 62 63 64 64 65 65 66 67 68 69 70 71 71 72 73 74 75 76 77 78 79 79 80 81 82 83 84 85 86 86 87 88 89 90 91 92 93 94 94 95 96 97 98 99 100 101 101 102 103 104 105 106 107 107 108 109 110 111 112 113 114 115 115 116 117 118 119 120 121 122 123 123 124 125 126 127 128 129 130 130 131 132 133 134 135 136 136 137 138 139 140 141 142 143 143 144 145 146 147 147 148 149 150 151 152 153 154 155 156 156 157 158 159 157 158 159 160 161 162 162 163 164 165 166 167 168 169 169 170 171 172 173 174 175 175 176 177 178 179 180 181 182 182 183 184 185 186 187 188 189 190 190 191 192 193 194 195 196 197 197 198 199 200 201 202 203 204 204 205 206 207 208 209 209 210 211 212 213 213 214 214 215 215 216 216 217 217 218 218 219 219 220>;
++		default-brightness-level = <200>;
++		power-supply = <&vcc_sys>;
++	};
++
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <6000000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4300000>;
++		voltage-max-design-microvolt = <4350000>;
++		voltage-min-design-microvolt = <3400000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 = <4322000 100>, <4250000 95>, <4192000 90>, <4136000 85>,
++				       <4080000 80>, <4022000 75>, <3972000 70>, <3928000 65>,
++				       <3885000 60>, <3833000 55>, <3798000 50>, <3780000 45>,
++				       <3776000 40>, <3773000 35>, <3755000 30>, <3706000 25>,
++				       <3640000 20>, <3589000 15>, <3535000 10>, <3492000 5>,
++				       <3400000 0>;
++	};
++
++	gpio_keys: gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-names = "default";
++		pinctrl-0 = <&kb_id_det>;
++
++		tablet-mode-switch {
++			debounce-interval = <20>;
++			gpios = <&gpio4 RK_PA4 GPIO_ACTIVE_HIGH>;
++			label = "Tablet Mode";
++			linux,input-type = <EV_SW>;
++			linux,code = <SW_TABLET_MODE>;
++		};
++	};
++
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "d";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
++	led-flash {
++		compatible = "regulator-led";
++		vled-supply = <&led_flash_reg>;
++		function = LED_FUNCTION_FLASH;
++		color = <LED_COLOR_ID_WHITE>;
++	};
++
++	led_flash_reg: led-flash-reg {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PA5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&flash_led_en_h>;
++		regulator-name = "led_flash_reg";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v_midu>;
++	};
++
++	rk817-sound {
++		compatible = "simple-audio-card";
++		pinctrl-names = "default";
++		pinctrl-0 = <&hp_det_l>;
++		simple-audio-card,format = "i2s";
++		simple-audio-card,name = "PineTab2";
++		simple-audio-card,mclk-fs = <256>;
++
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Microphone", "Microphone",
++			"Speaker", "Speakers";
++
++		simple-audio-card,routing =
++			"MICL", "Microphone",
++			"MICR", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Speaker Amplifier INL", "HPOL",
++			"Speaker Amplifier INR", "HPOR",
++			"Speakers", "Speaker Amplifier OUTL",
++			"Speakers", "Speaker Amplifier OUTR";
++
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,aux-devs = <&speaker_amp>;
++		simple-audio-card,pin-switches = "Speakers", "Microphone";
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++	};
++
++	sdio_pwrseq: sdio-pwrseq {
++		compatible = "mmc-pwrseq-simple";
++		clocks = <&rk817 1>;
++		clock-names = "ext_clock";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_reset>;
++		reset-gpios = <&gpio3 RK_PD2 GPIO_ACTIVE_LOW>;
++		post-power-on-delay-ms = <200>;
++	};
++
++	speaker_amp: speaker-amplifier {
++		compatible = "simple-audio-amplifier";
++		pinctrl-names = "default";
++		pinctrl-0 = <&spk_ctl>;
++		enable-gpios = <&gpio4 RK_PC2 GPIO_ACTIVE_HIGH>;
++		sound-name-prefix = "Speaker Amplifier";
++		VCC-supply = <&vcc_bat>;
++	};
++
++	vcc_3v3: vcc_3v3 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_3v3";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vcc3v3_minipcie: vcc3v3_minipcie {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PC3 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pcie_pwren_h>;
++		regulator-name = "vcc3v3_minipcie";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vcc3v3_sd: vcc3v3_sd {
++		compatible = "regulator-fixed";
++		gpio = <&gpio0 RK_PA5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&sdmmc_pwren_l>;
++		regulator-name = "vcc3v3_sd";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vcc5v0_usb_host0: vcc5v0_usb_host0 {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PC4 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&usb_host_pwren1_h>;
++		regulator-name = "vcc5v0_usb_host0";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v_midu>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vcc5v0_usb_host2: vcc5v0_usb_host2 {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PC5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&usb_host_pwren2_h>;
++		regulator-name = "vcc5v0_usb_host2";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v_midu>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vcc_bat: vcc_bat {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_bat";
++		regulator-always-on;
++		regulator-boot-on;
++	};
++
++	vcc_sys: vcc_sys {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		vin-supply = <&vcc_bat>;
++	};
++
++	vcc_wl: vcc_wl {
++		compatible = "regulator-fixed";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_pwren>;
++		regulator-name = "vcc_wl";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vdd1v2_dvp: vdd1v2_dvp {
++		compatible = "regulator-fixed";
++		regulator-name = "vdd1v2_dvp";
++		regulator-min-microvolt = <1200000>;
++		regulator-max-microvolt = <1200000>;
++		vin-supply = <&vcc_3v3>;
++		/*enable-supply = <&vcc2v8_dvp>;*/
++	};
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&combphy2 {
++	status = "okay";
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cru {
++	assigned-clocks = <&cru PLL_GPLL>, <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
++	assigned-clock-rates = <1200000000>, <200000000>, <500000000>;
++};
++
++&csi_dphy {
++	status = "okay";
++};
++
++&dsi0 {
++	status = "okay";
++	clock-master;
++	#address-cells = <1>;
++	#size-cells = <0>;
++
++	lcd: panel@0 {
++		compatible = "boe,th101mb31ig002-28a";
++		reg = <0>;
++		backlight = <&backlight>;
++		enable-gpios = <&gpio0 RK_PC7 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&lcd_pwren_h &lcd0_rst_l>;
++		rotation = <90>;
++		power-supply = <&vcc_3v3>;
++
++		ports {
++			#address-cells = <1>;
++			#size-cells = <0>;
++
++			port@0 {
++				reg = <0>;
++				#address-cells = <1>;
++				#size-cells = <0>;
++
++				panel_in_dsi: endpoint@0 {
++					reg = <0>;
++					remote-endpoint = <&dsi0_out_con>;
++				};
++			};
++		};
++	};
++};
++
++&dsi0_in {
++	dsi0_in_vp1: endpoint {
++		remote-endpoint = <&vp1_out_dsi0>;
++	};
++};
++
++&dsi0_out {
++	dsi0_out_con: endpoint {
++		remote-endpoint = <&panel_in_dsi>;
++	};
++};
++
++&dsi_dphy0 {
++	status = "okay";
++};
++
++&gpu {
++	mali-supply = <&vdd_gpu_npu>;
++	status = "okay";
++};
++
++&hdmi {
++	avdd-0v9-supply = <&vdda_0v9_p>;
++	avdd-1v8-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
++&hdmi_sound {
++	status = "okay";
++};
++
++&i2c0 {
++	clock-frequency = <400000>;
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1150000>;
++		regulator-ramp-delay = <2300>;
++		regulator-always-on;
++		regulator-boot-on;
++		vin-supply = <&vcc_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk817: pmic@20 {
++		compatible = "rockchip,rk817";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		assigned-clocks = <&cru I2S1_MCLKOUT_TX>;
++		assigned-clock-parents = <&cru CLK_I2S1_8CH_TX>;
++		clock-names = "mclk";
++		clocks = <&cru I2S1_MCLKOUT_TX>;
++		clock-output-names = "rk808-clkout1", "rk808-clkout2";
++		#clock-cells = <1>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int_l>, <&i2s1m0_mclk>;
++		rockchip,system-power-controller;
++		#sound-dai-cells = <0>;
++		wakeup-source;
++
++		vcc1-supply = <&vcc_sys>;
++		vcc2-supply = <&vcc_sys>;
++		vcc3-supply = <&vcc_sys>;
++		vcc4-supply = <&vcc_sys>;
++		vcc5-supply = <&vcc_sys>;
++		vcc6-supply = <&vcc_sys>;
++		vcc7-supply = <&vcc_sys>;
++		vcc8-supply = <&vcc_sys>;
++		vcc9-supply = <&vcc5v_midu>;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++				regulator-name = "vdd_logic";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_gpu_npu: DCDC_REG2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++				regulator-name = "vdd_gpu_npu";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++				regulator-name = "vcc_ddr";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc3v3_sys: DCDC_REG4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-initial-mode = <0x2>;
++				regulator-name = "vcc3v3_sys";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-name = "vcca1v8_pmu";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vdda_0v9_p: LDO_REG2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++				regulator-name = "vdda_0v9_p";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++				regulator-name = "vdda0v9_pmu";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-name = "vccio_acodec";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-name = "vccio_sd";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-name = "vcc3v3_pmu";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_1v8: LDO_REG7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-name = "vcc_1v8";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc1v8_dvp: LDO_REG8 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-name = "vcc1v8_dvp";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc2v8_dvp: LDO_REG9 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2800000>;
++				regulator-max-microvolt = <2800000>;
++				regulator-name = "vcc2v8_dvp";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc5v_midu: BOOST {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <5000000>;
++				regulator-max-microvolt = <5000000>;
++				regulator-name = "boost";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vbus: OTG_SWITCH {
++				regulator-min-microvolt = <5000000>;
++				regulator-max-microvolt = <5000000>;
++				regulator-name = "otg_switch";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++
++		charger {
++			monitored-battery = <&battery>;
++			rockchip,resistor-sense-micro-ohms = <10000>;
++			rockchip,sleep-enter-current-microamp = <300000>;
++			rockchip,sleep-filter-current-microamp = <100000>;
++		};
++	};
++};
++
++&i2c1 {
++	clock-frequency = <400000>;
++	status = "okay";
++
++	touchscreen@5d {
++		compatible = "goodix,gt911";
++		reg = <0x5d>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PB0 IRQ_TYPE_EDGE_FALLING>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&tp_int_l_pmuio2>, <&tp_rst_l_pmuio2>;
++		AVDD28-supply = <&vcc3v3_pmu>;
++		VDDIO-supply = <&vcca1v8_pmu>;
++		irq-gpios = <&gpio0 RK_PB0 GPIO_ACTIVE_HIGH>;
++		reset-gpios = <&gpio0 RK_PC2 GPIO_ACTIVE_HIGH>;
++	};
++};
++
++&i2c2 {
++	clock-frequency = <400000>;
++	pinctrl-0 = <&i2c2m1_xfer>;
++	status = "okay";
++
++	vcm@c {
++		compatible = "dongwoon,dw9714";
++		reg = <0x0c>;
++		vcc-supply = <&vcc1v8_dvp>;
++	};
++
++	camera@36 {
++		compatible = "ovti,ov5648";
++		reg = <0x36>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&camerab_pdn_l &camerab_rst_l>;
++
++		clocks = <&cru CLK_CIF_OUT>;
++		clock-names = "xvclk";
++
++		avdd-supply = <&vcc2v8_dvp>;
++		dvdd-supply = <&vdd1v2_dvp>;
++		dovdd-supply = <&vcc1v8_dvp>;
++		powerdown-gpios = <&gpio4 RK_PB3 GPIO_ACTIVE_LOW>;
++		reset-gpios = <&gpio4 RK_PB1 GPIO_ACTIVE_LOW>;
++
++		port {
++			endpoint {
++				data-lanes = <1 2>;
++				remote-endpoint = <0>;
++			};
++		};
++	};
++};
++
++&i2c5 {
++	clock-frequency = <400000>;
++	status = "okay";
++
++	accelerometer@18 {
++		compatible = "silan,sc7a20";
++		reg = <0x18>;
++		interrupt-parent = <&gpio3>;
++		interrupts = <RK_PA2 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&gsensor_int_l>;
++		st,drdy-int-pin = <1>;
++		vdd-supply = <&vcc_1v8>;
++		vddio-supply = <&vcc_1v8>;
++		mount-matrix = "1", "0", "0",
++			       "0", "0", "1",
++			       "0", "1", "0";
++	};
++};
++
++&i2s0_8ch {
++	status = "okay";
++};
++
++&i2s1_8ch {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2s1m0_sclktx
++		     &i2s1m0_lrcktx
++		     &i2s1m0_sdi0
++		     &i2s1m0_sdo0>;
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
++&pcie2x1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie_reset_h>;
++	reset-gpios = <&gpio1 RK_PB2 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_minipcie>;
++	status = "okay";
++};
++
++&pinctrl {
++	accelerometer {
++		gsensor_int_l: gsensor-int-l {
++			rockchip,pins = <3 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	bluetooth {
++		bt_wake_host_h: bt-wake-host-h {
++			rockchip,pins = <0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++	};
++
++	camerab {
++		camerab_pdn_l: camerab-pdn-l {
++			rockchip,pins = <4 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		camerab_rst_l: camerab-rst-l {
++			rockchip,pins = <4 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	cameraf {
++		cameraf_pdn_l: cameraf-pdn-l {
++			rockchip,pins = <4 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		cameraf_rst_l: cameraf-rst-l {
++			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	display {
++		lcd_pwren_h: lcd-pwren-h {
++			rockchip,pins = <0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	flash {
++		flash_led_en_h: flash-led-en-h {
++			rockchip,pins = <4 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	keyboard {
++		kb_id_det: kb-id-det {
++			rockchip,pins = <4 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pcie {
++		pcie_pwren_h: pcie-pwren-h {
++			rockchip,pins = <4 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pcie_reset_h: pcie-reset-h {
++			rockchip,pins = <1 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int_l: pmic-int-l {
++			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	sd {
++		sdmmc_pwren_l: sdmmc-pwren-l {
++			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	fspi {
++		fspi_dual_io_pins: fspi-dual-io-pins {
++			rockchip,pins =
++				/* fspi_clk */
++				<1 RK_PD0 1 &pcfg_pull_none>,
++				/* fspi_cs0n */
++				<1 RK_PD3 1 &pcfg_pull_none>,
++				/* fspi_d0 */
++				<1 RK_PD1 1 &pcfg_pull_none>,
++				/* fspi_d1 */
++				<1 RK_PD2 1 &pcfg_pull_none>;
++		};
++	};
++
++	sound {
++		hp_det_l: hp-det-l {
++			rockchip,pins = <4 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		spk_ctl: spk-ctl {
++			rockchip,pins = <4 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	touchscreen {
++		tp_int_l_pmuio2: tp-int-l-pmuio2 {
++			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++
++		tp_rst_l_pmuio2: tp-rst-l-pmuio2 {
++			rockchip,pins = <0 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		usbcc_int_l: usbcc-int-l {
++			rockchip,pins = <0 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		usb_host_pwren1_h: usb-host-pwren1-h {
++			rockchip,pins = <4 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		usb_host_pwren2_h: usb-host-pwren2-h {
++			rockchip,pins = <4 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	wifi {
++		host_wake_wl: host-wake-wl {
++			rockchip,pins = <0 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wifi_pwren: wifi-pwren {
++			rockchip,pins = <0 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wifi_reg_on_h: wifi-reg-on-h {
++			rockchip,pins = <0 RK_PC0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wifi_reset: wifi-reset {
++			rockchip,pins = <3 RK_PD2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wifi_wake_host_h: wifi-wake-host-h {
++			rockchip,pins = <0 RK_PC4 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++	};
++};
++
++&pmu_io_domains {
++	pmuio1-supply = <&vcc3v3_pmu>;
++	pmuio2-supply = <&vcca1v8_pmu>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio2-supply = <&vcc_1v8>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_1v8>;
++	vccio5-supply = <&vcc_1v8>;
++	vccio6-supply = <&vcc1v8_dvp>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&pwm4 {
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs200-1_8v;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8
++		     &emmc_clk
++		     &emmc_cmd
++		     &emmc_datastrobe
++		     &emmc_rstnout>;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&sdmmc0 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cd-gpios = <&gpio0 RK_PA4 GPIO_ACTIVE_LOW>;
++	disable-wp;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4
++		     &sdmmc0_clk
++		     &sdmmc0_cmd
++		     &sdmmc0_det>;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc3v3_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	status = "okay";
++};
++
++&sdmmc1 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cap-sdio-irq;
++	keep-power-in-suspend;
++	mmc-pwrseq = <&sdio_pwrseq>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc1_bus4
++		     &sdmmc1_cmd
++		     &sdmmc1_clk>;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_wl>;
++	vqmmc-supply = <&vcca1v8_pmu>;
++	status = "okay";
++};
++
++&sfc {
++	pinctrl-names = "default";
++	pinctrl-0 = <&fspi_dual_io_pins>;
++	status = "okay";
++	#address-cells = <1>;
++	#size-cells = <0>;
++
++	flash@0 {
++		compatible = "jedec,spi-nor";
++		reg = <0>;
++		spi-max-frequency = <24000000>;
++		spi-rx-bus-width = <2>;
++		spi-tx-bus-width = <1>;
++	};
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&uart1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart1m0_xfer
++		     &uart1m0_ctsn
++		     &uart1m0_rtsn>;
++	status = "okay";
++	uart-has-rtscts;
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	status = "okay";
++};
++
++&usb_host1_xhci {
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	phy-supply = <&vcc5v0_usb_host0>;
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	status = "okay";
++};
++
++&usb2phy1 {
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	phy-supply = <&vcc5v0_usb_host2>;
++	status = "okay";
++};
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
++
++&vp1 {
++	vp1_out_dsi0: endpoint@ROCKCHIP_VOP2_EP_MIPI0 {
++		reg = <ROCKCHIP_VOP2_EP_MIPI0>;
++		remote-endpoint = <&dsi0_in_vp1>;
++	};
++};
+-- 
+2.41.0.dirty
+
diff --git a/patches/linux/0003-supply-rk817-Fix-battery-capacity-sanity-check-calcu.patch b/patches/linux/0003-supply-rk817-Fix-battery-capacity-sanity-check-calcu.patch
new file mode 100644
index 000000000..e54d5fa74
--- /dev/null
+++ b/patches/linux/0003-supply-rk817-Fix-battery-capacity-sanity-check-calcu.patch
@@ -0,0 +1,30 @@
+From 1ee16a121b7bd74c76412b5b77a0dee8a3907a79 Mon Sep 17 00:00:00 2001
+From: Alexander Warnecke <awarnecke002@hotmail.com>
+Date: Thu, 29 Jun 2023 19:52:42 +1000
+Subject: [PATCH 3/4] supply: rk817: Fix battery capacity sanity check
+ calculation
+
+If the nvram variable is corrupted in a way that multiplying it by 1000 causes an integer overflow and wraps around to a number within or below the sanity check bounds, the check fails and capacity is reported incorrectly.
+Change the sanity check calculation to not multiply the variable read from the rk817 nvram, preventing the overflow and resulting in all corrupt capacity values being detected.
+
+Signed-off-by: Alexander Warnecke <awarnecke002@hotmail.com>
+---
+ drivers/power/supply/rk817_charger.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/drivers/power/supply/rk817_charger.c b/drivers/power/supply/rk817_charger.c
+index 1a2143641e66..36abffc6fc02 100644
+--- a/drivers/power/supply/rk817_charger.c
++++ b/drivers/power/supply/rk817_charger.c
+@@ -715,7 +715,7 @@ static int rk817_read_battery_nvram_values(struct rk817_charger *charger)
+ 	 * correct it.
+ 	 */
+ 	if ((charger->fcc_mah < 500) ||
+-	   ((charger->fcc_mah * 1000) > charger->bat_charge_full_design_uah)) {
++	   (charger->fcc_mah > (charger->bat_charge_full_design_uah / 1000))) {
+ 		dev_info(charger->dev,
+ 			 "Invalid NVRAM max charge, setting to %u uAH\n",
+ 			 charger->bat_charge_full_design_uah);
+-- 
+2.41.0.dirty
+
diff --git a/patches/linux/0004-arm64-dts-rockchip-pinetab2-Reverse-HP-det-polarity.patch b/patches/linux/0004-arm64-dts-rockchip-pinetab2-Reverse-HP-det-polarity.patch
new file mode 100644
index 000000000..1f9d9d34c
--- /dev/null
+++ b/patches/linux/0004-arm64-dts-rockchip-pinetab2-Reverse-HP-det-polarity.patch
@@ -0,0 +1,25 @@
+From 418dfa4a06101fc0e22a3a837d5da22fd46cc62e Mon Sep 17 00:00:00 2001
+From: Danct12 <danct12@disroot.org>
+Date: Mon, 10 Jul 2023 07:30:00 +0000
+Subject: [PATCH 4/4] arm64: dts: rockchip: pinetab2: Reverse HP det polarity
+
+---
+ arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi
+index a766f21bd6f8..1ba6e610767a 100644
+--- a/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-pinetab2.dtsi
+@@ -135,7 +135,7 @@ rk817-sound {
+ 			"Speakers", "Speaker Amplifier OUTL",
+ 			"Speakers", "Speaker Amplifier OUTR";
+ 
+-		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_LOW>;
+ 		simple-audio-card,aux-devs = <&speaker_amp>;
+ 		simple-audio-card,pin-switches = "Speakers", "Microphone";
+ 
+-- 
+2.41.0.dirty
+
