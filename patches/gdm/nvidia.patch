From b2179051089036690ef71fb23460db693a99ff22 Mon Sep 17 00:00:00 2001
From: Valentin David <me@valentindavid.com>
Date: Mon, 22 Apr 2024 18:19:23 +0300
Subject: [PATCH] Disable gdm nvidia suspend rules

Because nvidia drivers come in a sysext, udev cannot check for the
runtime since this might run before the sysext is mounted.
---
 data/61-gdm.rules.in | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/data/61-gdm.rules.in b/data/61-gdm.rules.in
index aa1a0e06c..5333ec01a 100644
--- a/data/61-gdm.rules.in
+++ b/data/61-gdm.rules.in
@@ -35,30 +35,30 @@ ACTION!="add", GOTO="gdm_nvidia_end"
 RUN+="/usr/bin/touch /run/udev/gdm-machine-has-vendor-nvidia-driver"
 
 # Import nvidia kernel parameters
 IMPORT{program}="/bin/sh -c \"sed -e 's/: /=/g' -e 's/\([^[:upper:]]\)\([[:upper:]]\)/\1_\2/g' -e 's/[[:lower:]]/\U&/g' -e 's/^/NVIDIA_/' /proc/driver/nvidia/params\""
 
 # Check if S0ix-based power management is available
 # If it is, there's no need to check for the suspend/resume services
 ENV{NVIDIA_ENABLE_S0IX_POWER_MANAGEMENT}=="1", GOTO="gdm_nvidia_suspend_end"
 
 # Check if suspend/resume services necessary for working wayland support is available
-TEST{0711}!="/usr/bin/nvidia-sleep.sh", GOTO="gdm_disable_wayland"
-TEST{0711}!="/usr/lib/systemd/system-sleep/nvidia", GOTO="gdm_disable_wayland"
+# TEST{0711}!="/usr/bin/nvidia-sleep.sh", GOTO="gdm_disable_wayland"
+# TEST{0711}!="/usr/lib/systemd/system-sleep/nvidia", GOTO="gdm_disable_wayland"
 
 ENV{NVIDIA_PRESERVE_VIDEO_MEMORY_ALLOCATIONS}!="1", GOTO="gdm_disable_wayland"
-IMPORT{program}="/bin/sh -c 'echo NVIDIA_HIBERNATE=`systemctl is-enabled nvidia-hibernate`'"
-ENV{NVIDIA_HIBERNATE}!="enabled", GOTO="gdm_disable_wayland"
-IMPORT{program}="/bin/sh -c 'echo NVIDIA_RESUME=`systemctl is-enabled nvidia-resume`'"
-ENV{NVIDIA_RESUME}!="enabled", GOTO="gdm_disable_wayland"
-IMPORT{program}="/bin/sh -c 'echo NVIDIA_SUSPEND=`systemctl is-enabled nvidia-suspend`'"
-ENV{NVIDIA_SUSPEND}!="enabled", GOTO="gdm_disable_wayland"
+# IMPORT{program}="/bin/sh -c 'echo NVIDIA_HIBERNATE=`systemctl is-enabled nvidia-hibernate`'"
+# ENV{NVIDIA_HIBERNATE}!="enabled", GOTO="gdm_disable_wayland"
+# IMPORT{program}="/bin/sh -c 'echo NVIDIA_RESUME=`systemctl is-enabled nvidia-resume`'"
+# ENV{NVIDIA_RESUME}!="enabled", GOTO="gdm_disable_wayland"
+# IMPORT{program}="/bin/sh -c 'echo NVIDIA_SUSPEND=`systemctl is-enabled nvidia-suspend`'"
+# ENV{NVIDIA_SUSPEND}!="enabled", GOTO="gdm_disable_wayland"
 LABEL="gdm_nvidia_suspend_end"
 LABEL="gdm_nvidia_end"
 
 # If this machine has an internal panel, take note, since it's probably a laptop
 # FIXME: It could be "ghost connectors" make this pop positive for some workstations
 # in the wild. If so, we may have to fallback to looking at the chassis type from
 # dmi data or acpi
 KERNEL!="card[0-9]-eDP-*", GOTO="gdm_laptop_check_end"
 SUBSYSTEM!="drm", GOTO="gdm_laptop_check_end"
 ACTION!="add", GOTO="gdm_laptop_check_end"
-- 
2.44.0

