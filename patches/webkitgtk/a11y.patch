From 0065eb981dedaa1c0b6499cb321006c16e6aeae7 Mon Sep 17 00:00:00 2001
From: Carlos Garcia Campos <cgarcia@igalia.com>
Date: Wed, 28 Aug 2024 11:34:02 +0200
Subject: [PATCH] REGRESSION(282339@main): [GTK] Broke a11y bus connection
 under flatpak https://bugs.webkit.org/show_bug.cgi?id=278743

Reviewed by NOBODY (OOPS!).

Only use the sandboxed a11 bus address when using bubblewrap.

* Source/WTF/wtf/glib/Sandbox.cpp:
(WTF::shouldUseBubblewrap):
* Source/WTF/wtf/glib/Sandbox.h:
* Source/WebKit/UIProcess/Launcher/glib/ProcessLauncherGLib.cpp:
(WebKit::ProcessLauncher::launchProcess):
* Source/WebKit/UIProcess/glib/WebProcessPoolGLib.cpp:
(WebKit::WebProcessPool::platformInitializeWebProcess):
(WebKit::WebProcessPool::setSandboxEnabled):
* Source/WebKit/UIProcess/glib/WebProcessProxyGLib.cpp:
(WebKit::WebProcessProxy::platformGetLaunchOptions):
---
 Source/WTF/wtf/glib/Sandbox.cpp                          | 9 +++++++++
 Source/WTF/wtf/glib/Sandbox.h                            | 2 ++
 .../UIProcess/Launcher/glib/ProcessLauncherGLib.cpp      | 2 +-
 Source/WebKit/UIProcess/glib/WebProcessPoolGLib.cpp      | 5 +++--
 Source/WebKit/UIProcess/glib/WebProcessProxyGLib.cpp     | 5 +++--
 5 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/Source/WTF/wtf/glib/Sandbox.cpp b/Source/WTF/wtf/glib/Sandbox.cpp
index eb8f01c5f305..61930b61921d 100644
--- a/Source/WTF/wtf/glib/Sandbox.cpp
+++ b/Source/WTF/wtf/glib/Sandbox.cpp
@@ -79,6 +79,15 @@ bool isInsideSnap()
     return returnValue;
 }
 
+bool shouldUseBubblewrap()
+{
+#if ENABLE(BUBBLEWRAP_SANDBOX)
+    return !isInsideFlatpak() && !isInsideSnap() && !isInsideUnsupportedContainer();
+#else
+    return false;
+#endif
+}
+
 bool shouldUsePortal()
 {
     static bool returnValue = []() -> bool {
diff --git a/Source/WTF/wtf/glib/Sandbox.h b/Source/WTF/wtf/glib/Sandbox.h
index 9ad384113e45..f8fbf15f2715 100644
--- a/Source/WTF/wtf/glib/Sandbox.h
+++ b/Source/WTF/wtf/glib/Sandbox.h
@@ -26,6 +26,7 @@ namespace WTF {
 WTF_EXPORT_PRIVATE bool isInsideFlatpak();
 WTF_EXPORT_PRIVATE bool isInsideUnsupportedContainer();
 WTF_EXPORT_PRIVATE bool isInsideSnap();
+WTF_EXPORT_PRIVATE bool shouldUseBubblewrap();
 WTF_EXPORT_PRIVATE bool shouldUsePortal();
 
 WTF_EXPORT_PRIVATE const CString& sandboxedUserRuntimeDirectory();
@@ -35,6 +36,7 @@ WTF_EXPORT_PRIVATE const CString& sandboxedUserRuntimeDirectory();
 using WTF::isInsideFlatpak;
 using WTF::isInsideUnsupportedContainer;
 using WTF::isInsideSnap;
+using WTF::shouldUseBubblewrap;
 using WTF::shouldUsePortal;
 
 using WTF::sandboxedUserRuntimeDirectory;
diff --git a/Source/WebKit/UIProcess/Launcher/glib/ProcessLauncherGLib.cpp b/Source/WebKit/UIProcess/Launcher/glib/ProcessLauncherGLib.cpp
index 6b7b195d2980..aff86c2fbcac 100644
--- a/Source/WebKit/UIProcess/Launcher/glib/ProcessLauncherGLib.cpp
+++ b/Source/WebKit/UIProcess/Launcher/glib/ProcessLauncherGLib.cpp
@@ -223,7 +223,7 @@ void ProcessLauncher::launchProcess()
 #if ENABLE(BUBBLEWRAP_SANDBOX)
     // You cannot use bubblewrap within Flatpak or some containers so lets ensure it never happens.
     // Snap can allow it but has its own limitations that require workarounds.
-    else if (sandboxEnabled && !isInsideFlatpak() && !isInsideSnap() && !isInsideUnsupportedContainer())
+    else if (sandboxEnabled && shouldUseBubblewrap())
         process = bubblewrapSpawn(launcher.get(), m_launchOptions, argv, &error.outPtr());
 #endif // ENABLE(BUBBLEWRAP_SANDBOX)
     else
diff --git a/Source/WebKit/UIProcess/glib/WebProcessPoolGLib.cpp b/Source/WebKit/UIProcess/glib/WebProcessPoolGLib.cpp
index 97e21a20f69f..c3dc2c114125 100644
--- a/Source/WebKit/UIProcess/glib/WebProcessPoolGLib.cpp
+++ b/Source/WebKit/UIProcess/glib/WebProcessPoolGLib.cpp
@@ -160,7 +160,7 @@ void WebProcessPool::platformInitializeWebProcess(const WebProcessProxy& process
     if (address)
         parameters.accessibilityBusAddress = String::fromUTF8(address);
     else
-        parameters.accessibilityBusAddress = m_sandboxEnabled ? sandboxedAccessibilityBusAddress() : accessibilityBusAddress();
+        parameters.accessibilityBusAddress = m_sandboxEnabled && shouldUseBubblewrap() ? sandboxedAccessibilityBusAddress() : accessibilityBusAddress();
 #endif
 
 #if PLATFORM(GTK)
@@ -213,7 +213,8 @@ void WebProcessPool::setSandboxEnabled(bool enabled)
 
     m_sandboxEnabled = true;
 #if USE(ATSPI)
-    m_sandboxedAccessibilityBusAddress = makeString("unix:path="_s, FileSystem::pathByAppendingComponent(FileSystem::stringFromFileSystemRepresentation(sandboxedUserRuntimeDirectory().data()), "at-spi-bus"_s));
+    if (shouldUseBubblewrap())
+        m_sandboxedAccessibilityBusAddress = makeString("unix:path="_s, FileSystem::pathByAppendingComponent(FileSystem::stringFromFileSystemRepresentation(sandboxedUserRuntimeDirectory().data()), "at-spi-bus"_s));
 #endif
 }
 
diff --git a/Source/WebKit/UIProcess/glib/WebProcessProxyGLib.cpp b/Source/WebKit/UIProcess/glib/WebProcessProxyGLib.cpp
index 33fa60149562..c964eb19e71b 100644
--- a/Source/WebKit/UIProcess/glib/WebProcessProxyGLib.cpp
+++ b/Source/WebKit/UIProcess/glib/WebProcessProxyGLib.cpp
@@ -32,7 +32,7 @@
 #include <signal.h>
 #include <sys/types.h>
 #include <wtf/FileSystem.h>
-
+#include <wtf/glib/Sandbox.h>
 
 namespace WebKit {
 using namespace WebCore;
@@ -55,7 +55,8 @@ void WebProcessProxy::platformGetLaunchOptions(ProcessLauncher::LaunchOptions& l
 
         launchOptions.extraSandboxPaths = m_processPool->sandboxPaths();
 #if USE(ATSPI)
-        launchOptions.extraInitializationData.set("sandboxedAccessibilityBusAddress"_s, m_processPool->sandboxedAccessibilityBusAddress());
+        if (shouldUseBubblewrap())
+            launchOptions.extraInitializationData.set("sandboxedAccessibilityBusAddress"_s, m_processPool->sandboxedAccessibilityBusAddress());
 #endif
     }
 }
