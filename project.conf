# Project name
name: gnome

# The minimum BuildStream version
min-version: 2.5

# Where elements are stored
element-path: elements

# The uri to download built artifacts from for this project
artifacts:
- url: https://gbm.gnome.org:11003
  connection-config:
    keepalive-time: 60
    retry-limit: 5
    retry-delay: 500
    request-timeout: 180

source-caches:
- url: https://gbm.gnome.org:11003
  connection-config:
    keepalive-time: 60
    retry-limit: 5
    retry-delay: 500
    request-timeout: 180

fatal-warnings:
- overlaps
- unaliased-url
- unstaged-files

(@):
- freedesktop-sdk.bst:include/runtime.yml
- include/aliases.yml
- include/mirrors.yml
- include/shell.yml

# Options to specify for the project, these provide
# command line switches which control the behavior of
# conditional directives in the element.bst files.
#
options:
  arch:
    type: arch
    description: Machine architecture
    variable: arch
    values:
    - aarch64
    - x86_64
    - ppc64le
    - riscv64
  toolbox:
    type: bool
    default: false
    description: mount host resources similar to toolbox
  x86_64_v3:
    type: bool
    description: Enable x86_64-v3 (EXPERIMENTAL)
    default: false

# Some overrides to the default sandbox execution environment
#
environment:
  LC_ALL: en_US.UTF-8
  (?):
  - arch == "aarch64":
      # Our aarch64 CI runner uses CentOS, which uses 64 KB page sizes, but we do not
      # want to support large pages in WebKit as this requires disabling both JIT and
      # bmalloc, including all heap security features. As a workaround until the CI
      # runner is switched from CentOS to a more-compatible OS, we can disable these
      # features only during the build process, so that gobject-introspection does not
      # crash during the build. This workaround is required in project.conf because
      # it's needed for every element that depends on WebKit, which is a lot. Remove
      # when the aarch64 CI no longer uses CentOS.
      JavaScriptCoreUseJIT: '0'
      Malloc: '1'
  - arch == "riscv64":
      G_SLICE: always-malloc

sandbox:
  build-arch: '%{arch}'

# Some overrides to element configuration based on type
#
# Here we can set a project wide options for various build systems,
# e.g. we can add --disable-gtk-doc to every `./configure` line.
elements:
  autotools:
    variables:
      conf-global: >-
        --disable-static
        --disable-Werror
        --host=%{triplet}
        --build=%{triplet}
        --disable-dependency-tracking
      remove-libtool-modules: true
      remove-libtool-libraries: true

  cmake:
    variables:
      cmake-global: >-
        -DCMAKE_BUILD_TYPE=RelWithDebInfo
        -DCMAKE_C_FLAGS_RELWITHDEBINFO="-DNDEBUG"
        -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="-DNDEBUG"
      generator: Ninja
      make-install: env DESTDIR="%{install-root}" cmake --install %{build-dir}

  meson:
    variables:
      meson-global: --buildtype=plain --auto-features=enabled --wrap-mode=nodownload

  filter:
    config:
      include-orphans: true

sources:
  git_repo:
    config:
      ref-format: git-describe
  cargo2:
    config:
      url: crates:crates
      git-mirrors:
        https://github.com/: "github:"
        https://gitlab.gnome.org/GNOME/: "gnome:"

split-rules:
  devel:
    (>):
    - '%{indep-libdir}/**/include'
    - '%{indep-libdir}/**/include/**'
    - '%{bindir}/*-config'
    - '%{libdir}/cmake'
    - '%{libdir}/cmake/**'
    - '%{datadir}/cmake'
    - '%{datadir}/cmake/**'
    - '%{datadir}/gir-1.0'
    - '%{datadir}/gir-1.0/**'
    - '%{datadir}/vala*/vapi'
    - '%{datadir}/vala*/vapi/**'
    - '%{datadir}/installed-tests'
    - '%{datadir}/installed-tests/**'
    - '%{libexecdir}/installed-tests'
    - '%{libexecdir}/installed-tests/**'
  doc:
    (>):
    - '%{datadir}/gtk-doc/html'
    - '%{datadir}/gtk-doc/html/**'
  source:
  - '%{sourcedir}'
  - '%{sourcedir}/**'
  vm:
  - '%{datadir}/dbus-1/**'

variables:
  branch: master
  branch-nice-name: Nightly #Should be %{branch} if not master
  installer-volume-id: "GNOME-OS-%{branch-nice-name}-%{arch}"
  qualifier: ''
  flatpak-branch: '%{branch}%{qualifier}'
  runstatedir: "/run"

  (?):
  - arch == "x86_64":
      go-arch: "amd64"
      systemd-arch: "x86-64"
  - arch == "aarch64":
      go-arch: "arm64"
      systemd-arch: "arm64"
  - arch == "ppc64le":
      gcc_arch: "powerpc64le"
      go-arch: "ppc64le"
      systemd-arch: "ppc64-le"
  - arch == "riscv64":
      go-arch: "riscv64"
      systemd-arch: "riscv64"

  # can be removed once we move to bst2
  fix-pyc-timestamps: ''

  (@):
  - include/image-version.yml

plugins:
- origin: junction
  junction: plugins/buildstream-plugins.bst
  elements:
  - autotools
  - meson
  - cmake
  - make
  sources:
  - patch

- origin: junction
  junction: plugins/buildstream-plugins-community.bst
  elements:
  - collect_manifest
  - flatpak_image
  - flatpak_repo
  - ostree
  - pyproject
  sources:
  - gen_cargo_lock
  - cargo2
  - git_module
  - git_repo
  - patch_queue
  - zip

- origin: local
  path: plugins
  elements:
  - collect_initial_scripts
