# Project name
name: gnome

# The minimum base BuildStream format
format-version: 8

# Where elements are stored
element-path: elements

# Store source refs in central project.refs file
ref-storage: project.refs

# The uri to download built artifacts from for this project
artifacts:
  url: http://bst-artifacts-gnome.codethink.co.uk/artifacts


# Options to specify for the project, these provide
# command line switches which control the behavior of
# conditional directives in the element.bst files.
#
options:
  arch:
    description: Machine architecture
    type: arch
    values:
    - arm
    - aarch64
    - i386
    - x86_64
    variable: arch


# Source aliases.
#
# These are used in the individual element.bst files in
# place of specifying full uris.
# 
# The location from where source code is downloaded can
# be changed without triggering a rebuild.
#
aliases:
  gnome_downloads: https://download.gnome.org/sources/
  cairo_org: https://cairographics.org/
  downloads.sourceforge.net: https://downloads.sourceforge.net/
  ftp_gnu_org: https://ftp.gnu.org/gnu/
  git_freedesktop_org: https://anongit.freedesktop.org/git/
  git_gnome_org: https://git.gnome.org/browse/
  github_com: https://github.com/
  gitlab_com: https://gitlab.com/
  gitlab_gnome_org: https://gitlab.gnome.org/
  gnome_download: https://download.gnome.org/
  icon_theme_freedesktop_org: https://icon-theme.freedesktop.org/releases/
  iso_codes: https://pkg-isocodes.alioth.debian.org/downloads/
  people_freedesktop_org: https://people.freedesktop.org/
  qqwing: https://qqwing.com/
  sourceforge_net: https://sourceforge.net/projects/
  speech_dispatcher: https://devel.freebsoft.org/pub/projects/speechd/
  spice: https://www.spice-space.org/download/
  webkitgtk_org: https://webkitgtk.org/releases/


# Some overrides to the default sandbox execution environment
#
environment:
  LC_ALL: en_US.UTF-8
  LDFLAGS: -L%{libdir}
  LD_LIBRARY_PATH: '%{libdir}'
  PATH: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
  PKG_CONFIG_PATH: /usr/local/lib/pkgconfig:%{libdir}/pkgconfig


# Some overrides to element configuration based on type
#
# Here we can set a project wide options for various build systems,
# e.g. we can add --disable-gtk-doc to every `./configure` line.
elements:
  autotools:
    variables:
      conf-extra: --disable-static --disable-gtk-doc --disable-Werror

      # Temporary workaround to avoid regenerating existing
      # configure scripts when building tarballs.
      #
      # We can remove this after addressing the upstream issue:
      #
      #    https://gitlab.com/BuildStream/buildstream/issues/256
      #
      # XXX: updating config.{sub,guess} would be still useful in that case
      # to fix compilation on recent architectures such as aarch64.
      autogen: |
        export NOCONFIGURE=1
        if [ -x %{conf-cmd} ]; then chmod u+w %{conf-aux}/config.{sub,guess} ||:; cp /usr/share/automake*/config.{sub,guess} %{conf-aux}
        elif [ -x autogen ]; then ./autogen
        elif [ -x autogen.sh ]; then ./autogen.sh
        elif [ -x bootstrap ]; then ./bootstrap
        elif [ -x bootstrap.sh ]; then ./bootstrap.sh
        else autoreconf -ivf
        fi
      # the directory where config.sub and config.guess are stored
      conf-aux: .

  cmake:
    variables:
      cmake-global: -DCMAKE_BUILD_TYPE=RelWithDebInfo
      generator: Ninja
  distutils:
    variables:
      prefix: /usr/local
      python-install: '%{python} setup.py install --root "%{install-root}"'
    config:
      install-commands:
        (>):
          # There's no way to get the setup.py to install this in the right place.
          - mkdir -p %{install-root}/usr/%{lib}/
          - mv %{install-root}/usr/lib/pkgconfig/ %{install-root}/usr/%{lib}/
  meson:
    variables:
      meson-extra: --buildtype=debugoptimized -Dgtk_doc=false

# Define some behavior for `bst shell`
#
shell:

  # Default command for `bst shell`, we prefer bash, and disable
  # parsing of profile and rc files so that the prompt BuildStream
  # sets is not overwritten.
  command: [ 'bash', '--noprofile', '--norc', '-i' ]

  # Some environment variables to inherit from the host environment
  environment:
    LANG: '$LANG'
    DISPLAY: '$DISPLAY'
    DBUS_SESSION_BUS_ADDRESS: '$DBUS_SESSION_BUS_ADDRESS'
    XDG_RUNTIME_DIR: '$XDG_RUNTIME_DIR'

    # Inform applications which use pulseaudio of the server socket
    PULSE_SERVER: 'unix:${XDG_RUNTIME_DIR}/pulse/native'

  # Some things to mount into the sandbox
  host-files:
  # Understand user inherited uid/gid
  - '/etc/passwd'
  - '/etc/group'
  # Allow network resolution
  - '/etc/resolv.conf'

  # Allow access to plausible video devices,
  # declare these optional to avoid meaningless warnings
  - path: '/dev/dri'
    optional: True
  - path: '/dev/mali'
    optional: True
  - path: '/dev/mali0'
    optional: True
  - path: '/dev/umplock'
    optional: True
  - path: '/dev/nvidiactl'
    optional: True
  - path: '/dev/nvidia0'
    optional: True
  - path: '/dev/nvidia-modeset'
    optional: True

  # Allow access to sysfs, needed for local device discovery
  - '/sys'

  # Allow access to the user runtime directory, this
  # will include the pulseaudio socket along with some
  # other things.
  - '${XDG_RUNTIME_DIR}'

variables:
  gcc_arch: "%{arch}"
  abi: "gnu"
  gcc_triplet: "%{gcc_arch}-linux-%{abi}"
  lib: "lib/%{gcc_triplet}"

  (?):
    - arch == "i386":
        gcc_arch: "i386"
    - arch == "arm":
        abi: "gnueabihf"
